<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Gitee Pages个人图床搭建</title>
    <url>/blog/2020/03/18/Gitee%20Pages%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Hexo+Next个人博客配置与优化（四）通过custom.styl修改标题样式</title>
    <url>/blog/2020/03/18/Hexo+Next%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BC%98%E5%8C%96%EF%BC%88%E5%9B%9B%EF%BC%89%E9%80%9A%E8%BF%87custom.styl%E4%BF%AE%E6%94%B9%E6%A0%87%E9%A2%98%E6%A0%B7%E5%BC%8F/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>之前提到过通过修改Swig模板引擎来个性化定制个人博客，这次我们来通过修改custom.styl文件来修改我们博客中的一些样式的配置。这篇文章主要说明了用stylus的语法修改博客中的某些内容的CSS样式来实现我们想要的效果。</p>
<h5 id="本文参考链接"><a href="#本文参考链接" class="headerlink" title="本文参考链接"></a>本文参考链接</h5><p><a href="https://stylus.bootcss.com/" target="_blank" rel="noopener" title="stylus官方文档">stylus官方文档</a></p>
<a id="more"></a>

<h3 id="修改博客标题样式"><a href="#修改博客标题样式" class="headerlink" title="修改博客标题样式"></a>修改博客标题样式</h3><h4 id="修改思路"><a href="#修改思路" class="headerlink" title="修改思路"></a>修改思路</h4><p>话不多说直接放图：</p>
<p>Image20200318006</p>
<p>我从一开始就想把这个标题的样式给改掉了，但是官方并没有提供相应的文档，那么我就得自己去琢磨怎么改这个地方了。这时你去翻阅网上的博客你会发现，很多人在用Next主题定制自己的博客时，会去在custom.styl文件里写配置信息，而且格式和CSS十分相似，于是我便去查了下styl文件到底是什么：</p>
<p><a href="https://stylus.bootcss.com/" target="_blank" rel="noopener" title="stylus官方文档">stylus官方文档</a></p>
<p>当然我这里可以理解为，这是一个容错率更高的CSS文件，换个思路想，我去用CSS的写法去写肯定是没问题的对吧（当然这是在我不想花时间去理解styl的精髓而采取的无脑方法）。</p>
<h4 id="修改标题背景"><a href="#修改标题背景" class="headerlink" title="修改标题背景"></a>修改标题背景</h4><p>既然我们是修改HTML中某一元素的样式，那么我们最直接的方法就是用浏览器的开发者工具去定位我们需要修改的主体到底是什么就好了：</p>
<p>Image20200318007</p>
<p>你可以看到他的CSS定义是这样的：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.brand</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#222</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>那么我们需要做的就很简单了，去custom.styl把brand类添加一个透明属性，因为我根本就不想要这个方形黑框显示在我的博客标题上。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.brand</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="修改标题文字"><a href="#修改标题文字" class="headerlink" title="修改标题文字"></a>修改标题文字</h4><p>同样的因为我们的标题背景变成透明的了，我需要把我的标题内容文字的颜色也修改以下，同样的用浏览器开发者工具去定位，你可以找到标题文字部分的HTML是这样的：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"site-title"</span> <span class="attr">style</span>=<span class="string">"opacity: 1; top: 0px;"</span>&gt;</span>FF's Blog<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>所以我们只需要在custom.styl中添加：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.site-title</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">64</span>,<span class="number">64</span>,<span class="number">64</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里说明一点，我们修改的属性是会覆盖原来赋予的属性值的，这一点也很好理解。如果你在HTML中外连两个CSS样式，如果这两个样式中都对同一类的同一属性赋予了不同的值，是最后面的一个属性值会覆盖掉前面的属性值。我想这里应该是一样的原理。</p>
<p>这里我还需要修改一下文字的大小以及文字的字体，不过这里是在配置文件中有集成，所以我们去主题配置文件修改就好了,这里还有一些我的其他部分字体及大小的修改：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Font Settings</span></span><br><span class="line"><span class="comment"># - Find fonts on Google Fonts (https://www.google.com/fonts)</span></span><br><span class="line"><span class="comment"># - All fonts set here will have the following styles:</span></span><br><span class="line"><span class="comment">#     light, light italic, normal, normal italic, bold, bold italic</span></span><br><span class="line"><span class="comment"># - Be aware that setting too much fonts will cause site running slowly</span></span><br><span class="line"><span class="comment"># - Introduce in 5.0.1</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># CAUTION! Safari Version 10.1.2 <span class="doctag">bug:</span> https://github.com/iissnan/hexo-theme-next/issues/1844</span></span><br><span class="line"><span class="comment"># To avoid space between header and sidebar in Pisces / Gemini themes recommended to use Web Safe fonts for `global` (and `logo`):</span></span><br><span class="line"><span class="comment"># Arial | Tahoma | Helvetica | Times New Roman | Courier New | Verdana | Georgia | Palatino | Garamond | Comic Sans MS | Trebuchet MS</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Uri of fonts host. E.g. //fonts.googleapis.com (Default).</span></span><br><span class="line">  <span class="attr">host:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font options:</span></span><br><span class="line">  <span class="comment"># `external: true` will load this font family from `host` above.</span></span><br><span class="line">  <span class="comment"># `family: Times New Roman`. Without any quotes.</span></span><br><span class="line">  <span class="comment"># `size: xx`. Use `px` as unit.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Global font settings used on &lt;body&gt; element.</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Monda</span></span><br><span class="line">    <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for Headlines (h1, h2, h3, h4, h5, h6).</span></span><br><span class="line">  <span class="comment"># Fallback to `global` font settings.</span></span><br><span class="line">  <span class="attr">headings:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Monda</span></span><br><span class="line">    <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for posts.</span></span><br><span class="line">  <span class="comment"># Fallback to `global` font settings.</span></span><br><span class="line">  <span class="attr">posts:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Monda</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for Logo.</span></span><br><span class="line">  <span class="comment"># Fallback to `global` font settings.</span></span><br><span class="line">  <span class="attr">logo:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Trade</span> <span class="string">Winds</span></span><br><span class="line">    <span class="attr">size:</span> <span class="number">60</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for &lt;code&gt; and code blocks.</span></span><br><span class="line">  <span class="attr">codes:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">PT</span> <span class="string">Mono</span></span><br><span class="line">    <span class="attr">size:</span></span><br></pre></td></tr></table></figure>

<p>备注也说明了，你需要什么字体还可以去 <a href="https://www.google.com/fonts" target="_blank" rel="noopener">https://www.google.com/fonts</a> 上面查看。</p>
<h4 id="删除顶部的黑线"><a href="#删除顶部的黑线" class="headerlink" title="删除顶部的黑线"></a>删除顶部的黑线</h4><p>你可以通过同样的方法定位到顶部黑线的样式：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.headband</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#222</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后直接把display属性设置为none就好了：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.headband</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="完成结果"><a href="#完成结果" class="headerlink" title="完成结果"></a>完成结果</h4><p>直接上图：</p>
<p>Image20200318008</p>
<p>顺便加上Next的自带动画，修改主题配置文件：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Canvas-nest</span></span><br><span class="line"><span class="attr">canvas_nest:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>这是我比较喜欢的一个自带的动画，你也可以尝试下其他的动画效果，不过要注意一次只能开启其中一个。</p>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>这里介绍了另外一种定制自己博客的方法思路，结合之前的修改swig的方法，应该可以做到大部分想要的效果。而且慢慢地也更偏向于理解并修改前端代码而不只是简单的配置参数了。</p>
]]></content>
      <categories>
        <category>个人博客的配置与优化</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+Next个人博客配置与优化（三）阅读全文与字数统计</title>
    <url>/blog/2020/03/18/Hexo+Next%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BC%98%E5%8C%96%EF%BC%88%E4%B8%89%EF%BC%89%E9%98%85%E8%AF%BB%E5%85%A8%E6%96%87%E4%B8%8E%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在个人博客的主要功能都实现之后，接下来就是一些裁裁剪剪的工作了。点进去你的博客，看看有没有什么不顺眼的地方？大致看过之后，我决定添加几个新的小功能。这篇文章主要说明了为博客添加阅读原文以及每篇博客显示字数统计和阅读时长的功能。</p>
<h5 id="本文参考链接"><a href="#本文参考链接" class="headerlink" title="本文参考链接"></a>本文参考链接</h5><p><a href="http://node-swig.github.io/swig-templates/" target="_blank" rel="noopener" title="Swig官方文档">Swig官方文档</a></p>
<a id="more"></a>

<h3 id="阅读原文功能"><a href="#阅读原文功能" class="headerlink" title="阅读原文功能"></a>阅读原文功能</h3><p>首先去思考，这么简单的一个功能，会不会是主题配置文件自带的呢？打开主题配置文件，你会发现确实有这么一段配置字段：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Automatically Excerpt. Not recommend.</span></span><br><span class="line"><span class="comment"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span></span><br><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">150</span></span><br></pre></td></tr></table></figure>
<p>当然你会看到备注上写着”Not recommend”，然后给出了另外一种方法：在自己的markdown文档中添加标注来让你自由地选择该放多少内容在阅读原文前面。</p>
<p>这里我也尝试过用不推荐的方法也就是打开自动摘录的功能，然后会发现你的首页文章成了这个样子：</p>
<p>Image20200318003</p>
<p>前言这么一个标题直接混进摘要内容里去了，那么我再用标注的方法来对比一下效果：</p>
<p>Image20200318004</p>
<p>根据我的书写习惯，我会在文章开头写前言，并把一些重要的参考链接放在前言里面。所以我只需要在前言部分后面添加上标注就好：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">### 前言</span></span><br><span class="line"></span><br><span class="line">紧接着上一篇 [<span class="string">Hexo+Next个人博客配置与优化（一）标签与分类</span>](<span class="link">https://ff0819.github.io/blog/2020/03/17/Hexo+Next%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BC%98%E5%8C%96%EF%BC%88%E4%B8%80%EF%BC%89%E6%A0%87%E7%AD%BE%E4%B8%8E%E5%88%86%E7%B1%BB/ "Hexo+Next个人博客配置与优化（一）标签与分类"</span>) 来说，分类和标签的基本功能肯定还达不到我们对一个个人博客功能的要求。而Next为我们提供了丰富的第三方服务集成的选项，在官方网站中对第三方服务也有文档说明配置操作。</span><br><span class="line"></span><br><span class="line"><span class="section">##### 本文参考链接</span></span><br><span class="line"></span><br><span class="line">[<span class="string">Next官方使用文档</span>](<span class="link">http://theme-next.iissnan.com/ "Next官方使用文档"</span>)</span><br><span class="line">[<span class="string">来必力官网</span>](<span class="link">http://livere.com/ "来必力官网"</span>)</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- more --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="section">### 评论系统-来必力</span></span><br></pre></td></tr></table></figure>

<p>我想对我而言标注的方法肯定是更适合我的，也能很好的约束我的书写规范。</p>
<h3 id="字数统计和阅读时长"><a href="#字数统计和阅读时长" class="headerlink" title="字数统计和阅读时长"></a>字数统计和阅读时长</h3><p>这个我在网上看到了两种方法实现这个功能，分别依赖的的两个不同的包：</p>
<p><a href="https://github.com/theme-next/hexo-symbols-count-time" target="_blank" rel="noopener" title="hexo-symbols-count-time">hexo-symbols-count-time</a></p>
<p><a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener" title="hexo-wordcount ">hexo-wordcount </a></p>
<p>这里我用的第二个方法，因为我看到主题配置文件中默认有的也是第二种方法用的包。另外我看到用第一个方法的文章它的字数是1.1k而阅读时长却是1分钟。甚至他贴的图也是1分钟1k字，我就感觉这包有点不太靠谱了，而且写这文章的人也不太靠谱。</p>
<p>首先是进入站点文件夹安装hexo-wordcount：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-wordcount</span><br></pre></td></tr></table></figure>

<p>检查下你的package.json</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"dependencies": &#123;</span><br><span class="line">    "hexo": "^4.0.0",</span><br><span class="line">    "hexo-deployer-git": "^2.1.0",</span><br><span class="line">    "hexo-generator-archive": "^1.0.0",</span><br><span class="line">    "hexo-generator-category": "^1.0.0",</span><br><span class="line">    "hexo-generator-index": "^1.0.0",</span><br><span class="line">    "hexo-generator-searchdb": "^1.2.0",</span><br><span class="line">    "hexo-generator-tag": "^1.0.0",</span><br><span class="line">    "hexo-renderer-ejs": "^1.0.0",</span><br><span class="line">    "hexo-renderer-marked": "^2.0.0",</span><br><span class="line">    "hexo-renderer-stylus": "^1.1.0",</span><br><span class="line">    "hexo-server": "^1.0.0",</span><br><span class="line">    "hexo-wordcount": "^6.0.1"//安装成功</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>打开主题配置文件，找到post_wordcount字段设置：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/willin/hexo-wordcount</span></span><br><span class="line"><span class="attr">post_wordcount:</span></span><br><span class="line">  <span class="attr">item_text:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">totalcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>另外我顺手把上边的post_meta字段中updated_at也启用了：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_meta:</span></span><br><span class="line">  <span class="attr">item_text:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">created_at:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">updated_at:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>可以来看看效果：</p>
<p>Image20200318005</p>
<p>很显然字数统计和阅读时长只把数字显示出来了，需要给他们配上单位。这里用的方法不再是简单的修改配置文件了，而是修改主题的样式。</p>
<p>打开your_site\themes\next\layout_macro\post.swig，找到字数相应部分：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; __('post.wordcount') &#125;&#125;"</span>&gt;</span></span><br><span class="line">    &#123;&#123; wordcount(post.content) &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在后面添加上单位：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; __('post.wordcount') &#125;&#125;"</span>&gt;</span></span><br><span class="line">    &#123;&#123; wordcount(post.content) &#125;&#125; 字</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>同理找到阅读时长部分,添加单位：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; __('post.min2read') &#125;&#125;"</span>&gt;</span></span><br><span class="line">    &#123;&#123; min2read(post.content) &#125;&#125; 分钟</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>再来看看效果：</p>
<p>Image20200318006</p>
<p>现在这个功能算是完美实现了，修改swig也算是为我们提供了一种个性化定制我们博客的方案。</p>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>从这些方案可以看出，想要达到某种效果可能有很多种方案去实现，而越往细节走官方提供的文档支持是越少的。而作为开发人员自然是自己动手丰衣足食。next采用的模板引擎是swig，在上面修改字数统计和阅读时长时我们也接触到了swig的文件。所以后面如果我们想能够对next有更多的了解，进行更加个性化的定制，最基础的还是先要了解和学习一下swig的语法知识，了解他的常用用法。最后放上Swig的官方文档：<br><a href="http://node-swig.github.io/swig-templates/" target="_blank" rel="noopener" title="Swig官方文档">Swig官方文档</a></p>
]]></content>
      <categories>
        <category>个人博客的配置与优化</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>Swig</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+Next个人博客配置与优化（二）集成第三方服务-评论，统计与搜索</title>
    <url>/blog/2020/03/17/Hexo+Next%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BC%98%E5%8C%96%EF%BC%88%E4%BA%8C%EF%BC%89%E9%9B%86%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%E6%9C%8D%E5%8A%A1-%E8%AF%84%E8%AE%BA%EF%BC%8C%E7%BB%9F%E8%AE%A1%E4%B8%8E%E6%90%9C%E7%B4%A2/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>紧接着上一篇配置与优化来说，分类和标签的基本功能肯定还达不到我们对一个个人博客功能的要求。而Next为我们提供了丰富的第三方服务集成的选项，在官方网站中对第三方服务也有文档说明配置操作。这篇文章主要说明了个人博客接入评论，统计与搜索功能的操作方法。</p>
<h5 id="本文参考链接"><a href="#本文参考链接" class="headerlink" title="本文参考链接"></a>本文参考链接</h5><p><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener" title="Next官方使用文档">Next官方使用文档</a><br><a href="http://livere.com/" target="_blank" rel="noopener" title="来必力官网">来必力官网</a></p>
<a id="more"></a>

<h3 id="评论系统-来必力"><a href="#评论系统-来必力" class="headerlink" title="评论系统-来必力"></a>评论系统-来必力</h3><p>一个博客的评论系统还是挺重要的，在这里考虑到国内外网速问题，以及登录方式的支持问题，来必力作为评论系统应该是一个比较合适的选择。</p>
<p><a href="http://livere.com/" target="_blank" rel="noopener" title="来必力">来必力</a>是一个韩国公司做的社会化评论系统，只要通过其他社交平台的账号登录即可评论。他的UI做的也还不错，也能支持我们国内的微信等平台登陆。当然他的一些基本功能是免费的，而且这些基本功能已经足够满足我们对评论的需求。</p>
<h4 id="配置操作"><a href="#配置操作" class="headerlink" title="配置操作"></a>配置操作</h4><p>首先通过邮箱去官网上注册账号，网站支持中文，操作起来应该没什么太大问题。</p>
<p>进入到自己的管理界面，选择设置部分可以对接入的评论系统进行个性化设置。管理界面如下：</p>
<p>Image20200317003</p>
<p>进入代码管理标签，你可以看到自己的来比力安装代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 来必力City版安装代码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"lv-container"</span> <span class="attr">data-id</span>=<span class="string">"city"</span> <span class="attr">data-uid</span>=<span class="string">"XXXXXXXXXX"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        (<span class="function"><span class="keyword">function</span><span class="params">(d, s)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> j, e = d.getElementsByTagName(s)[<span class="number">0</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (<span class="keyword">typeof</span> LivereTower === <span class="string">'function'</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            j = d.createElement(s);</span><br><span class="line"><span class="actionscript">            j.src = <span class="string">'https://cdn-city.livere.com/js/embed.dist.js'</span>;</span></span><br><span class="line"><span class="actionscript">            j.async = <span class="literal">true</span>;</span></span><br><span class="line"></span><br><span class="line">            e.parentNode.insertBefore(j, e);</span><br><span class="line"><span class="javascript">        &#125;)(<span class="built_in">document</span>, <span class="string">'script'</span>);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">noscript</span>&gt;</span>为正常使用来必力评论功能请激活JavaScript<span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- City版安装代码已完成 --&gt;</span></span><br></pre></td></tr></table></figure>

<p>Next已经集成了来比力的代码，你只需要把你的data-uid填写到相应的配置项中即可：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Support for LiveRe comments system.</span></span><br><span class="line"><span class="comment"># You can get your uid from https://livere.com/insight/myCode (General web site)</span></span><br><span class="line"><span class="attr">livere_uid:</span> <span class="string">your</span> <span class="string">uid</span></span><br></pre></td></tr></table></figure>

<h4 id="完成效果"><a href="#完成效果" class="headerlink" title="完成效果"></a>完成效果</h4><p>本地可以启动看到评论框的效果，为了测试管理功能我直接部署到Github Pages上：</p>
<p>Image20200317004</p>
<p>现在可以看看官方的管理面板：</p>
<p>Image20200317005</p>
<h3 id="数据统计与分析-腾讯分析"><a href="#数据统计与分析-腾讯分析" class="headerlink" title="数据统计与分析-腾讯分析"></a>数据统计与分析-腾讯分析</h3><p>数据统计服务并不会对你的页面有什么影响，主要也就是看看你网站的访客情况。看到里面有腾讯的东西也没多想直接使用了。</p>
<p>在国内腾讯的地位我想也不用多说了，所以我想长时间的使用这项服务应该是没什么问题的，不用担心突然收费或者不再支持啥的。另外QQ号登陆也能免去注册的麻烦。</p>
<h4 id="配置操作-1"><a href="#配置操作-1" class="headerlink" title="配置操作"></a>配置操作</h4><p>QQ号登陆，进入到管理面板；<br>输入你的域名，添加站点（前面不需要带http协议头）；<br>Next继承了腾讯分析的接入代码，你只需要把自己的站点ID配置到主题配置文件就好。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Tencent analytics ID</span></span><br><span class="line"><span class="attr">tencent_analytics:</span> <span class="string">your_site_id</span></span><br></pre></td></tr></table></figure>

<p>这里注意释放这块代码的时候前面别留空格，不要和上面的配置项形成了从属关系。</p>
<h4 id="完成效果-1"><a href="#完成效果-1" class="headerlink" title="完成效果"></a>完成效果</h4><p>这里它生效是需要一段时间的，当你部署到Github Pages上之后访问几次，等大概半小时再去管理界面看情况，有数据了就说明配置成功了。</p>
<p>Image20200317006</p>
<h3 id="搜索服务-Local-Search"><a href="#搜索服务-Local-Search" class="headerlink" title="搜索服务-Local Search"></a>搜索服务-Local Search</h3><p>官方文档中提供了三种方式，当我看到Local Search只需要下个开源包我想也就没另外两种方式啥事了。</p>
<h4 id="配置操作-2"><a href="#配置操作-2" class="headerlink" title="配置操作"></a>配置操作</h4><p>进入到站点的根目录，用npm安装hexo-generator-searchdb:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /d your-hexo-site</span><br><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>看看你的package.json文件检查下安装情况：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"dependencies": &#123;</span><br><span class="line">    "hexo": "^4.0.0",</span><br><span class="line">    "hexo-deployer-git": "^2.1.0",</span><br><span class="line">    "hexo-generator-archive": "^1.0.0",</span><br><span class="line">    "hexo-generator-category": "^1.0.0",</span><br><span class="line">    "hexo-generator-index": "^1.0.0",</span><br><span class="line">    "hexo-generator-searchdb": "^1.2.0",//有这个包就说明安装成功了</span><br><span class="line">    "hexo-generator-tag": "^1.0.0",</span><br><span class="line">    "hexo-renderer-ejs": "^1.0.0",</span><br><span class="line">    "hexo-renderer-marked": "^2.0.0",</span><br><span class="line">    "hexo-renderer-stylus": "^1.1.0",</span><br><span class="line">    "hexo-server": "^1.0.0"</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>编辑站点配置文件，就是你个人博客目录下的配置文件, 添加搜索相关配置：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>

<p>最后编辑主题配置文件，找到local search的配置并启用：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/flashlab/hexo-generator-search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># if auto, trigger search by changing input</span></span><br><span class="line">  <span class="comment"># if manual, trigger search by pressing enter key or search button</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>

<h4 id="完成效果-2"><a href="#完成效果-2" class="headerlink" title="完成效果"></a>完成效果</h4><p>他会在menu中自动生成一个搜索按钮：</p>
<p>Image20200318001</p>
<p>然后搜索效果如下：</p>
<p>Image20200318002</p>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>官网上提供的其他三方服务我也都有所尝试。分享服务我用过JiaThis，但是体验不是很好，而且考虑到分享功能大部分浏览器也都会自带，所以就放弃了这一块。其他服务中因为我是国内使用，感觉FB和Google的东西没必要，那个数学公式如果以后有需求还是会考虑，不过说实在的markdown写数学公式好像很复杂。</p>
]]></content>
      <categories>
        <category>个人博客的配置与优化</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+Next个人博客配置与优化（一）标签与分类</title>
    <url>/blog/2020/03/17/Hexo+Next%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BC%98%E5%8C%96%EF%BC%88%E4%B8%80%EF%BC%89%E6%A0%87%E7%AD%BE%E4%B8%8E%E5%88%86%E7%B1%BB/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>既然选择了用Github Pages这种静态网页项目的方式来搭建自己的博客，那么必然会是一个不断优化的过程。我计划每次优化都会在自己的博客中记录下目的与方法，以供参考。这篇文章主要说明标签与分类的配置与使用，以及其中搭配其他配置的一些细节。</p>
<h5 id="本文参考链接"><a href="#本文参考链接" class="headerlink" title="本文参考链接"></a>本文参考链接</h5><p><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener" title="Next官方使用文档">Next官方使用文档</a></p>
<a id="more"></a>

<h3 id="添加标签页面"><a href="#添加标签页面" class="headerlink" title="添加标签页面"></a>添加标签页面</h3><p>标签功能在Hexo里属于一个多对多的关系，你一篇文章可以对应多个标签，同样一个标签也可以对应对篇文章。标签功能在Hexo的框架中是默认使用的，如果你和我的操作大致一样的话，在sidebar中应该会有标签和分类的按钮，只是没有相应的页面供我们跳转，而你所需要做的就是把这个标签的页面创建出来。</p>
<h4 id="新建标签页面"><a href="#新建标签页面" class="headerlink" title="新建标签页面"></a>新建标签页面</h4><p>在cmd中，定位到你的博客所在位置，使用 hexo new page 新建一个页面，命名为tags：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /d your-hexo-site</span><br><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>
<p>这样便会创建一个md文件：your-hexo-site\source\tags\index.md。</p>
<h4 id="设置页面类型"><a href="#设置页面类型" class="headerlink" title="设置页面类型"></a>设置页面类型</h4><p>打开刚刚创建的页面，将页面的类型设置为tags，主题将自动为这个页面显示标签云。页面内容如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2020-03-17 13:03:54</span><br><span class="line">type: "tags"</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h4 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h4><p>找到主题配置文件中菜单的配置部分，将tag部分释放出来，这样在主页的菜单中就可以直接跳转到你刚刚创建的标签页面了：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Menu Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span><br><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span><br><span class="line"><span class="comment"># Key is the name of menu item. If translate for this menu will find in languages - this translate will be loaded; if not - Key name will be used. Key is case-senstive.</span></span><br><span class="line"><span class="comment"># Value before `||` delimeter is the target link.</span></span><br><span class="line"><span class="comment"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/||</span> <span class="string">home</span></span><br><span class="line">  <span class="comment">#about: /about/ || user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">tags||</span> <span class="string">tags</span></span><br><span class="line">  <span class="comment">#categories: /categories/ || th</span></span><br><span class="line">  <span class="comment">#archives: archives|| archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure>

<p>这里依旧提及几个和官方文档不一致的地方，首先是我的博客项目是个人网站的一个分支地址，所以需要删掉前面的”/“，同样和我之前的文章<a href="https://ff0819.github.io/blog/2020/03/15/Hexo+Next%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/" title="Hexo+Next个人博客搭建">Hexo+Next个人博客搭建</a>中提到的问题一样，”||”前面不要留空格，不然地址解析会把空格解析进去。</p>
<h4 id="文章添加标签"><a href="#文章添加标签" class="headerlink" title="文章添加标签"></a>文章添加标签</h4><p>写法如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo+Next个人博客配置与优化（一）标签与分类</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">  - </span>Github Pages</span><br><span class="line"><span class="bullet">  - </span>Hexo</span><br><span class="line"><span class="bullet">  - </span>Next</span><br><span class="line"><span class="bullet">  - </span>CSS</span><br><span class="line"><span class="bullet">  - </span>HTML</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h4><p>在cmd中，定位到你的博客所在位置，执行以下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>

<p>可以在本地看看效果：</p>
<p>Image20200317001</p>
<h3 id="添加分类页面"><a href="#添加分类页面" class="headerlink" title="添加分类页面"></a>添加分类页面</h3><p>分类在Hexo框架中是与标签有所区分的，他是一个一对多的关系。一个分类下可以有多篇文章，但一篇文章只能有一个分类。同样的分类功能在Hexo的框架中也是默认使用的，你所需要做的就是把这个分类的页面创建出来。</p>
<h4 id="新建分类页面"><a href="#新建分类页面" class="headerlink" title="新建分类页面"></a>新建分类页面</h4><p>在cmd中，定位到你的博客所在位置，使用 hexo new page 新建一个页面，命名为tags：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /d your-hexo-site</span><br><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>

<p>这样便会创建一个md文件：your-hexo-site\source\categories\index.md。</p>
<h4 id="设置页面类型-1"><a href="#设置页面类型-1" class="headerlink" title="设置页面类型"></a>设置页面类型</h4><p>打开刚刚创建的页面，将页面的类型设置为tags，主题将自动为这个页面显示标签云。页面内容如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2020-03-17 14:00:52</span><br><span class="line">type: "categories"</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h4 id="修改主题配置文件-1"><a href="#修改主题配置文件-1" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h4><p>找到主题配置文件中菜单的配置部分，将categories部分释放出来：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Menu Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span><br><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span><br><span class="line"><span class="comment"># Key is the name of menu item. If translate for this menu will find in languages - this translate will be loaded; if not - Key name will be used. Key is case-senstive.</span></span><br><span class="line"><span class="comment"># Value before `||` delimeter is the target link.</span></span><br><span class="line"><span class="comment"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/||</span> <span class="string">home</span></span><br><span class="line">  <span class="comment">#about: /about/ || user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">tags||</span> <span class="string">tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">categories||</span> <span class="string">th</span></span><br><span class="line">  <span class="comment">#archives: archives|| archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure>
<p>这里需要注意的地方和标签部分的一样，不留”/“以及空格的问题。</p>
<h4 id="文章添加分类"><a href="#文章添加分类" class="headerlink" title="文章添加分类"></a>文章添加分类</h4><p>写法如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo+Next个人博客配置与优化（一）标签与分类</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">  - </span>Github Pages</span><br><span class="line"><span class="bullet">  - </span>Hexo</span><br><span class="line"><span class="bullet">  - </span>Next</span><br><span class="line"><span class="bullet">  - </span>CSS</span><br><span class="line"><span class="bullet">  - </span>HTML</span><br><span class="line">categories: web</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h4 id="运行结果-1"><a href="#运行结果-1" class="headerlink" title="运行结果"></a>运行结果</h4><p>在cmd中，定位到你的博客所在位置，执行以下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>

<p>可以在本地看看效果：</p>
<p>Image20200317002</p>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>这样Hexo博客框的两大基本功能也是完善了，官方文档还有其他配置的详细说明，有兴趣的可以通过文章前言部分的参考链接访问，并对自己的博客进行配置。</p>
]]></content>
      <categories>
        <category>个人博客的配置与优化</category>
      </categories>
      <tags>
        <tag>Github Pages</tag>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Github Pages个人网站搭建</title>
    <url>/blog/2020/03/15/Github%20Pages%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>前几天尝试了一下通过Github Pages搭建了一个个人博客，用的是Hexo+Next的模板。这段时间学习了一点前端之后想自己捣腾一下，但是以我现在的前端水平想在模板上自由发挥可能会出现很多问题。于是，我想把原来的个人博客作为一个项目站点放在我的 username.github.io/blog 里面, 而把 username.github.io 用作一个导航主页。这样的一个结构我在项目里面自由发挥也不会影响到博客的稳定性，同时也能将博客的更新和代码的提交记录区分开来，后期也会便于修改维护。</p>
<h5 id="本文参考链接"><a href="#本文参考链接" class="headerlink" title="本文参考链接"></a>本文参考链接</h5><p><a href="https://pages.github.com/" target="_blank" rel="noopener" title="Github Pages官方网站">Github Pages官方网站</a></p>
<a id="more"></a>

<h3 id="第一步-创建主页项目"><a href="#第一步-创建主页项目" class="headerlink" title="第一步 创建主页项目"></a>第一步 创建主页项目</h3><h4 id="创建github仓库"><a href="#创建github仓库" class="headerlink" title="创建github仓库"></a>创建github仓库</h4><p>首先是创建一个以 username.github.io 为名的项目，其中username必须与你github的username相同，这样Github Pages会自动把这个域名与你的项目绑定在一起。项目创建完成之后，进入到项目的Settings-&gt;Options-&gt;Github Pages, 状态应该与下图类似。</p>
<p>图片：Image20200314001</p>
<h4 id="上传主页文件"><a href="#上传主页文件" class="headerlink" title="上传主页文件"></a>上传主页文件</h4><p>这里以搭建网站结构为主，我们项目中先放一个带博客导航的主页index.html就可以了</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>FF's Web<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">b</span>&gt;</span>Hello world!<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://ff0819.github.io/blog/"</span>&gt;</span>FF's Blog<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="第二步-创建博客项目"><a href="#第二步-创建博客项目" class="headerlink" title="第二步 创建博客项目"></a>第二步 创建博客项目</h3><h4 id="创建github仓库-1"><a href="#创建github仓库-1" class="headerlink" title="创建github仓库"></a>创建github仓库</h4><p>同样是在Github上创建一个项目，这次对项目名没有什么特别的要求（在主页项目对项目名的要求是为了让默认域名可以自动绑定到主页项目的静态网页上）。</p>
<h4 id="配置Github-Pages"><a href="#配置Github-Pages" class="headerlink" title="配置Github Pages"></a>配置Github Pages</h4><p>然后便是对项目的Github Pages进行设定。进入项目的Settings-&gt;Options-&gt;Github Pages设定部分，将你的Source选择为你所想要展示的分支（如果你的域名是自己的而不是github分配的默认域名那么你可能需要在Custom domain中配置）。</p>
<p>现在你已经可以通过 <a href="https://username.github.io/repositoryname" target="_blank" rel="noopener">https://username.github.io/repositoryname</a> 来访问到你博客项目的页面了，你可以上传一个最简单的页面进行测试。</p>
<p>这里与主页的配置区别就是Github Pages的设置需要自己动手去修改，毕竟不可能你每个新创建的项目就要放在Github Pages上展示的对吧。而主页因为你的项目名的特殊性自然就直接绑定在了分配给你的域名下面。</p>
<h4 id="上传博客项目"><a href="#上传博客项目" class="headerlink" title="上传博客项目"></a>上传博客项目</h4><p>博客项目的搭建参考我的另一篇文章：</p>
<p><a href="https://ff0819.github.io/blog/2020/03/15/Hexo+Next%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/" title="Hexo+Next个人博客搭建
">Hexo+Next个人博客搭建</a></p>
<h3 id="其他项目"><a href="#其他项目" class="headerlink" title="其他项目"></a>其他项目</h3><p>其他项目同博客项目操作方法一致，不过需要你在主页项目中做好相应的链接，当然你也可以直接通过 <a href="https://username.github.io/repositoryname" target="_blank" rel="noopener">https://username.github.io/repositoryname</a> 来访问。</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><h4 id="Github-Pages的限制"><a href="#Github-Pages的限制" class="headerlink" title="Github Pages的限制"></a>Github Pages的限制</h4><p>Github Pages 并不是无限存储和无限流量的静态站点服务，一些限制如下：</p>
<ul>
<li>内容存储不能超过1GB。</li>
<li>每个月100GB流量带宽。</li>
<li>每小时编译构建次数不超过10次。</li>
</ul>
<p>更多参看官方说明：<a href="https://help.github.com/en/github/working-with-github-pages/about-github-pages#usage-limits" target="_blank" rel="noopener" title="Github Pages官方文档">Github Pages官方文档</a></p>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>这篇文章主要是说明Github Pages的一些操作方法和注意事项。我目前还没想好主页该做成什么样子，博客则是已经有了想法后续会放出来并对相应的操作写进博客进行记录。</p>
]]></content>
      <categories>
        <category>个人网站的配置与优化</category>
      </categories>
      <tags>
        <tag>Github Pages</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+Next个人博客搭建</title>
    <url>/blog/2020/03/15/Hexo+Next%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>个人博客的框架有很多，Github Pages官方推荐的是jekyll框架。不过在使用过程中在网上搜寻相关文章，大多数都是以Hexo为框架来搭建自己的博客。而实际使用上的感觉而言，Hexo框架下的Next主题相比于jekyll框架下的个人上传的模板，Next主题更强大，文档更丰富。所以这里我选择了Hexo+Next来构建自己的博客。这篇文章主要说明如何安装Hexo与Next，并发布在自己的Github Pages上。</p>
<h5 id="本文参考链接"><a href="#本文参考链接" class="headerlink" title="本文参考链接"></a>本文参考链接</h5><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener" title="Hexo官方使用文档">Hexo官方使用文档</a><br><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener" title="Next官方使用文档">Next官方使用文档</a></p>
<a id="more"></a>

<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><h4 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h4><p>安装Hexo需要先安装下列应用程序：</p>
<p><a href="https://nodejs.org/en/" target="_blank" rel="noopener" title="Node.js">Node.js</a> (Node.js 版本需不低于 8.10，建议使用 Node.js 10.0 及以上版本)<br><a href="https://git-scm.com/" target="_blank" rel="noopener" title="Git">Git</a></p>
<p>我想大概搞前端开发的应该都会和Node.js打交道，Git的话我想大概写代码的都会和它打交道。<br>这里我之前没理解为什么会在这里用到Git，之后看到了hexo init指令的输入信息里发现hexo init实质上是去 <a href="https://github.com/hexojs/hexo-starter.git" target="_blank" rel="noopener">https://github.com/hexojs/hexo-starter.git</a> 复制项目。</p>
<p>可在cmd中验证你的电脑里面是否有上述应用程序：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure>

<h4 id="安装Hexo-1"><a href="#安装Hexo-1" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><p>Node.js与Git安装完成之后，即可使用 npm 安装 Hexo。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>安装完成后同样可以通过指令来验证是否安装成功。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure>

<h3 id="Hexo建站"><a href="#Hexo建站" class="headerlink" title="Hexo建站"></a>Hexo建站</h3><h4 id="初始化脚手架"><a href="#初始化脚手架" class="headerlink" title="初始化脚手架"></a>初始化脚手架</h4><p>安装 Hexo 完成后，在cmd中进入你想放置建站所需文件的位置：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd &lt;target folder&gt;</span><br></pre></td></tr></table></figure>

<p>如果切换了盘符需要使用cd /d:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /d &lt;target folder&gt;</span><br></pre></td></tr></table></figure>

<p>并执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p>这里所需要的文件并不是直接构成你个人博客的文件，而是一个脚手架，用于自动化生成你的个人博客项目。</p>
<p>新建完成后，指定文件夹的目录如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure>

<h4 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h4><p>网站的配置文件，配置参数的地方，后面使用的主题里面也会有一个配置文件，在配置的时候不要混淆了。</p>
<h4 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h4><p>这个和Java里面的maven、gradle十分相似，一个第三方包的管理工具。而上述操作中npm install就和maven install指令差不多，用于安装文件中指定的包和指定的版本号。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"hexo-site"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.0.0"</span>,</span><br><span class="line">  <span class="attr">"private"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"build"</span>: <span class="string">"hexo generate"</span>,</span><br><span class="line">    <span class="attr">"clean"</span>: <span class="string">"hexo clean"</span>,</span><br><span class="line">    <span class="attr">"deploy"</span>: <span class="string">"hexo deploy"</span>,</span><br><span class="line">    <span class="attr">"server"</span>: <span class="string">"hexo server"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hexo"</span>: &#123;</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">""</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"hexo"</span>: <span class="string">"^4.0.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-archive"</span>: <span class="string">"^1.0.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-category"</span>: <span class="string">"^1.0.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-index"</span>: <span class="string">"^1.0.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-tag"</span>: <span class="string">"^1.0.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-renderer-ejs"</span>: <span class="string">"^1.0.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-renderer-stylus"</span>: <span class="string">"^1.1.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-renderer-marked"</span>: <span class="string">"^2.0.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-server"</span>: <span class="string">"^1.0.0"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="scaffolds"><a href="#scaffolds" class="headerlink" title="scaffolds"></a>scaffolds</h4><p>模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p>
<p>Hexo的模板是指在新建的文章文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p>
<h4 id="source"><a href="#source" class="headerlink" title="source"></a>source</h4><p>资源文件夹是存放用户资源的地方。除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。</p>
<h4 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h4><p>主题文件夹。Hexo会根据主题来生成静态页面。</p>
<h4 id="本地运行"><a href="#本地运行" class="headerlink" title="本地运行"></a>本地运行</h4><p>此时已经可以通过脚手架来生成个人博客的静态文件了，执行以下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">生成静态文件</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="meta">#</span><span class="bash">启动服务器。默认情况下，访问网址为： http://localhost:4000/。</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>此时打开浏览器访问 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 应该可以看到一个默认主题下的个人博客。</p>
<p>图片：Image20200314002</p>
<h3 id="修改站点配置文件"><a href="#修改站点配置文件" class="headerlink" title="修改站点配置文件"></a>修改站点配置文件</h3><h4 id="网站信息"><a href="#网站信息" class="headerlink" title="网站信息"></a>网站信息</h4><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">FF's</span> <span class="string">Blog</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">'Hello My Blog!'</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">FF</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br></pre></td></tr></table></figure>

<p>这里不需要过多说明，官方文档对每个值及其可选项都有详细介绍。</p>
<h4 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h4><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://ff0819.github.io/blog</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/blog/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing 'index.html' from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing '.html' from permalinks</span></span><br></pre></td></tr></table></figure>

<p>这里注释也写得比较清楚了，我的博客是放在 <a href="https://ff0819.github.io">https://ff0819.github.io</a> 下的blog站点里面，所以这里的配置需要修改url和root两个参数。</p>
<h4 id="部署配置"><a href="#部署配置" class="headerlink" title="部署配置"></a>部署配置</h4><p>安装 <a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>这里你打开刚刚的package.json就会发现hexo-deployer-git已经添加到你的三方包列表里面去了。</p>
<p>修改部署配置</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/FF0819/blog.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p>最后一步，生成站点文件并推送至远程库。执行 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure>

<p>此时如果你已经配置好了项目站点的Github Pages那么你的页面就可以直接通过Github默认域名/项目站点来访问你的个人博客（如果你配置了自己的域名情况可能不一样），另外如果你用的分支不是默认的master，需要在站点配置文件中把branch与Github Pages中的分支修改成你所想发布的分支。</p>
<p>如果你访问到的个人博客样式显示不正确，那么可能是一下几个情况导致的（我个人遇到过的问题）：</p>
<ul>
<li>站点配置文件中网址配置的url和root有误。</li>
<li>主题配置文件中网址配置的地址有误。</li>
<li>有可能是主题自身的问题，我在使用默认的主题时博客的样式就没有显示，使用Next主题时就没有出现相同的问题。</li>
</ul>
<h3 id="Next主题"><a href="#Next主题" class="headerlink" title="Next主题"></a>Next主题</h3><h4 id="安装Next"><a href="#安装Next" class="headerlink" title="安装Next"></a>安装Next</h4><p>在cmd中，定位到 Hexo 站点目录下。使用 Git checkout 代码：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd your-hexo-site</span><br><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<p>也可以去<a href="https://github.com/iissnan/hexo-theme-next/releases" target="_blank" rel="noopener">发布页面</a>下载所需要的版本</p>
<p>下载下来之后解压到站点文件列表里面的themes文件下，并重命名为next。<br>修改站点配置文件为：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>

<p>此时可以重新运行进行验证，可以看到主题已经变更为Next主题了。</p>
<p>图片：Image20200315001</p>
<h4 id="Next主题设定"><a href="#Next主题设定" class="headerlink" title="Next主题设定"></a>Next主题设定</h4><h5 id="Scheme选择"><a href="#Scheme选择" class="headerlink" title="Scheme选择"></a>Scheme选择</h5><p>Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。官网上的文档显示说是有三种外观可选，而现在我看配置文件里面又添加了一中外观。我这里选的还是默认的Muse外观。虽然博客标题部分不是很美观后面可以通过修改其CSS样式进行改造。其配置位于主题配置文件内：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Scheme Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure>

<h5 id="语言设置"><a href="#语言设置" class="headerlink" title="语言设置"></a>语言设置</h5><p>这一部分在之前站点配置文件中已经修改过了，而之后修改菜单项对应字段则是在主题文件夹中的languages里进行修改。</p>
<h5 id="菜单配置"><a href="#菜单配置" class="headerlink" title="菜单配置"></a>菜单配置</h5><p>这里如果是用的项目站点需要注意主题配置文件的menu配置，这会影响到你个人博客的站内链接的有效性。默认情况下只有archives和home两个配置客可以使用，这个在后面配置了标签、分类、搜索等功能后也需要在这里进行修改：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Menu Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span><br><span class="line"><span class="comment"># Usage: `Key: /link/ || icon` </span></span><br><span class="line"><span class="comment"># Key is the name of menu item. If translate for this menu will find in languages - this translate will be loaded; if not - Key name will be used. Key is case-senstive.</span></span><br><span class="line"><span class="comment"># Value before `||` delimeter is the target link.</span></span><br><span class="line"><span class="comment"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/||</span> <span class="string">home</span></span><br><span class="line">  <span class="comment">#about: /about/ || user</span></span><br><span class="line">  <span class="comment">#tags: /tags/ || tags</span></span><br><span class="line">  <span class="comment">#categories: /categories/ || th</span></span><br><span class="line">  <span class="comment">#archives: archives|| archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure>

<p>个人目前使用情况是向上述代码这样写才能保证站内访问的正确性，要注意/与||之间不要留空格（不知道他的代码是怎么解析这个地址的，有空格的话会把空格解析成%20）||后面的内容是用来指定该按钮的icon样式，其采用的FontAwesome图标样式。</p>
<p>另外这里建议把archives注释掉。在我自己搭建的过程中发现，这里的链接是对sidebar那三个“日志、分类、标签”按钮是有影响的。唯独日志这个按钮会因为上面这种||写法导致连接的地址出现问题。这应该是个BUG，而且在配置文件中也没有放出对sidebar这几个按钮的链接设置问题。</p>
<h5 id="侧栏头像配置"><a href="#侧栏头像配置" class="headerlink" title="侧栏头像配置"></a>侧栏头像配置</h5><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="comment"># in theme directory(source/images): /images/avatar.gif</span></span><br><span class="line"><span class="comment"># in site  directory(source/uploads): /uploads/avatar.gif</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">/images/ava.jpg</span></span><br></pre></td></tr></table></figure>

<p>这里把你的头像文件放在你的主题文件夹相应的位置。当然也可以用外链的形式链接你的图片。</p>
<h5 id="侧栏导航配置"><a href="#侧栏导航配置" class="headerlink" title="侧栏导航配置"></a>侧栏导航配置</h5><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/ff0819</span> <span class="string">||</span> <span class="string">github</span></span><br><span class="line">  <span class="attr">E-Mail:</span> <span class="string">mailto:2578840587@qq.com</span> <span class="string">||</span> <span class="string">envelope</span></span><br><span class="line">  <span class="attr">Site:</span> <span class="string">https://ff0819.github.io</span> <span class="string">||</span> <span class="string">google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || facebook</span></span><br><span class="line">  <span class="comment">#VK Group: https://vk.com/yourname || vk</span></span><br><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || skype</span></span><br></pre></td></tr></table></figure>

<p>和菜单下的按钮配置导航同理，不过这里因为不存在地址拼接的问题所以不会出现上述的空格问题。</p>
<h5 id="作者昵称设置"><a href="#作者昵称设置" class="headerlink" title="作者昵称设置"></a>作者昵称设置</h5><p>编辑站点配置文件，设置author为你的昵称。</p>
<h5 id="站点描述"><a href="#站点描述" class="headerlink" title="站点描述"></a>站点描述</h5><p>编辑 站点配置文件，设置description字段为你的站点描述。</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><h4 id="Github-Pages的限制"><a href="#Github-Pages的限制" class="headerlink" title="Github Pages的限制"></a>Github Pages的限制</h4><p>Github Pages 并不是无限存储和无限流量的静态站点服务，一些限制如下：</p>
<ul>
<li>内容存储不能超过1GB。</li>
<li>每个月100GB流量带宽。</li>
<li>每小时编译构建次数不超过10次。</li>
</ul>
<p>更多参看官方说明：<a href="https://help.github.com/en/github/working-with-github-pages/about-github-pages#usage-limits" target="_blank" rel="noopener" title="Github Pages官方文档">Github Pages官方文档</a></p>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>这样一个基本的个人博客已经完成了，后续的一些配置打算放在一个配置与优化系列中说明，毕竟这种个人项目的博客配置与优化是一个长期的过程，希望自己能在这个过程中不断成长。</p>
]]></content>
      <categories>
        <category>个人博客的配置与优化</category>
      </categories>
      <tags>
        <tag>Github Pages</tag>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
</search>
